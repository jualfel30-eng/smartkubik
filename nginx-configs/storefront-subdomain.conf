# ========================================
# NGINX CONFIG - STOREFRONT SUBDOMINIOS
# ========================================
# Ubicación: /etc/nginx/sites-available/storefront-subdomain
#
# Este config maneja TODOS los subdominios de smartkubik.com
# excepto el admin y el api que tienen sus propios configs
#
# Instalación:
# 1. sudo cp storefront-subdomain.conf /etc/nginx/sites-available/
# 2. sudo ln -s /etc/nginx/sites-available/storefront-subdomain /etc/nginx/sites-enabled/
# 3. sudo nginx -t
# 4. sudo systemctl reload nginx

server {
    listen 80;
    listen [::]:80;

    # Captura TODOS los subdominios de smartkubik.com
    # Ejemplo: cliente1.smartkubik.com, restaurante.smartkubik.com, etc.
    server_name ~^(?<subdomain>[^.]+)\.smartkubik\.com$;

    # Excluye subdominios reservados (admin, api, www)
    if ($subdomain ~* ^(admin|api|www)$) {
        return 444; # Rechaza - otros configs manejan esto
    }

    # Redirect HTTP a HTTPS (después de instalar certificado SSL)
    # Descomenta esta línea cuando tengas SSL:
    # return 301 https://$host$request_uri;

    location / {
        # Proxy pass al storefront Next.js (puerto 3001)
        proxy_pass http://localhost:3001;

        # Headers críticos para que Next.js reciba el dominio correcto
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # Headers para Next.js
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Logs específicos para debug
    access_log /var/log/nginx/storefront-access.log;
    error_log /var/log/nginx/storefront-error.log;
}

# ========================================
# BLOQUE HTTPS (se genera automáticamente con certbot)
# ========================================
# Después de ejecutar:
# sudo certbot --nginx -d "*.smartkubik.com"
#
# Certbot agregará automáticamente un server block adicional
# con listen 443 ssl y las rutas a los certificados
