/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MessagePropsVoice
 */
export interface MessagePropsVoice {
    /**
     * Optional. For audio files, this field indicates the duration of the audio file in seconds.
     * @type {number}
     * @memberof MessagePropsVoice
     */
    seconds?: number;
    /**
     * Time in seconds to simulate recording voice
     * @type {number}
     * @memberof MessagePropsVoice
     */
    recordingTime?: number;
}

/**
 * Check if a given object implements the MessagePropsVoice interface.
 */
export function instanceOfMessagePropsVoice(value: object): value is MessagePropsVoice {
    return true;
}

export function MessagePropsVoiceFromJSON(json: any): MessagePropsVoice {
    return MessagePropsVoiceFromJSONTyped(json, false);
}

export function MessagePropsVoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessagePropsVoice {
    if (json == null) {
        return json;
    }
    return {
        
        'seconds': json['seconds'] == null ? undefined : json['seconds'],
        'recordingTime': json['recording_time'] == null ? undefined : json['recording_time'],
    };
}

export function MessagePropsVoiceToJSON(json: any): MessagePropsVoice {
    return MessagePropsVoiceToJSONTyped(json, false);
}

export function MessagePropsVoiceToJSONTyped(value?: MessagePropsVoice | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'seconds': value['seconds'],
        'recording_time': value['recordingTime'],
    };
}

