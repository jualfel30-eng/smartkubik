/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CheckContact } from './CheckContact';
import {
    CheckContactFromJSON,
    CheckContactFromJSONTyped,
    CheckContactToJSON,
    CheckContactToJSONTyped,
} from './CheckContact';

/**
 * 
 * @export
 * @interface CheckContactResponse
 */
export interface CheckContactResponse {
    /**
     * 
     * @type {Array<CheckContact>}
     * @memberof CheckContactResponse
     */
    contacts?: Array<CheckContact>;
}

/**
 * Check if a given object implements the CheckContactResponse interface.
 */
export function instanceOfCheckContactResponse(value: object): value is CheckContactResponse {
    return true;
}

export function CheckContactResponseFromJSON(json: any): CheckContactResponse {
    return CheckContactResponseFromJSONTyped(json, false);
}

export function CheckContactResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckContactResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'contacts': json['contacts'] == null ? undefined : ((json['contacts'] as Array<any>).map(CheckContactFromJSON)),
    };
}

export function CheckContactResponseToJSON(json: any): CheckContactResponse {
    return CheckContactResponseToJSONTyped(json, false);
}

export function CheckContactResponseToJSONTyped(value?: CheckContactResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'contacts': value['contacts'] == null ? undefined : ((value['contacts'] as Array<any>).map(CheckContactToJSON)),
    };
}

