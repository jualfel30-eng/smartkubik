/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Parsed phone number
 * @export
 * @interface MobileLoginStatusPhoneNumber
 */
export interface MobileLoginStatusPhoneNumber {
    /**
     * Country of the phone number
     * @type {string}
     * @memberof MobileLoginStatusPhoneNumber
     */
    country?: string;
    /**
     * Phone number in E164 format
     * @type {string}
     * @memberof MobileLoginStatusPhoneNumber
     */
    e164Format?: string;
    /**
     * Phone number in international format
     * @type {string}
     * @memberof MobileLoginStatusPhoneNumber
     */
    internationalFormat?: string;
    /**
     * Phone number in national format
     * @type {string}
     * @memberof MobileLoginStatusPhoneNumber
     */
    nationalFormat?: string;
    /**
     * Country code
     * @type {string}
     * @memberof MobileLoginStatusPhoneNumber
     */
    countryCode?: string;
    /**
     * Phone number
     * @type {string}
     * @memberof MobileLoginStatusPhoneNumber
     */
    nationalNumber?: string;
    /**
     * Mobile Country Code
     * @type {string}
     * @memberof MobileLoginStatusPhoneNumber
     */
    mcc?: string;
}

/**
 * Check if a given object implements the MobileLoginStatusPhoneNumber interface.
 */
export function instanceOfMobileLoginStatusPhoneNumber(value: object): value is MobileLoginStatusPhoneNumber {
    return true;
}

export function MobileLoginStatusPhoneNumberFromJSON(json: any): MobileLoginStatusPhoneNumber {
    return MobileLoginStatusPhoneNumberFromJSONTyped(json, false);
}

export function MobileLoginStatusPhoneNumberFromJSONTyped(json: any, ignoreDiscriminator: boolean): MobileLoginStatusPhoneNumber {
    if (json == null) {
        return json;
    }
    return {
        
        'country': json['country'] == null ? undefined : json['country'],
        'e164Format': json['e164_format'] == null ? undefined : json['e164_format'],
        'internationalFormat': json['international_format'] == null ? undefined : json['international_format'],
        'nationalFormat': json['national_format'] == null ? undefined : json['national_format'],
        'countryCode': json['country_code'] == null ? undefined : json['country_code'],
        'nationalNumber': json['national_number'] == null ? undefined : json['national_number'],
        'mcc': json['mcc'] == null ? undefined : json['mcc'],
    };
}

export function MobileLoginStatusPhoneNumberToJSON(json: any): MobileLoginStatusPhoneNumber {
    return MobileLoginStatusPhoneNumberToJSONTyped(json, false);
}

export function MobileLoginStatusPhoneNumberToJSONTyped(value?: MobileLoginStatusPhoneNumber | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'country': value['country'],
        'e164_format': value['e164Format'],
        'international_format': value['internationalFormat'],
        'national_format': value['nationalFormat'],
        'country_code': value['countryCode'],
        'national_number': value['nationalNumber'],
        'mcc': value['mcc'],
    };
}

