/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
    MessageToJSONTyped,
} from './Message';
import type { Chat } from './Chat';
import {
    ChatFromJSON,
    ChatFromJSONTyped,
    ChatToJSON,
    ChatToJSONTyped,
} from './Chat';

/**
 * 
 * @export
 * @interface LabelAssociations
 */
export interface LabelAssociations {
    /**
     * 
     * @type {Array<Chat>}
     * @memberof LabelAssociations
     */
    chats?: Array<Chat>;
    /**
     * 
     * @type {Array<Message>}
     * @memberof LabelAssociations
     */
    messages?: Array<Message>;
}

/**
 * Check if a given object implements the LabelAssociations interface.
 */
export function instanceOfLabelAssociations(value: object): value is LabelAssociations {
    return true;
}

export function LabelAssociationsFromJSON(json: any): LabelAssociations {
    return LabelAssociationsFromJSONTyped(json, false);
}

export function LabelAssociationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): LabelAssociations {
    if (json == null) {
        return json;
    }
    return {
        
        'chats': json['chats'] == null ? undefined : ((json['chats'] as Array<any>).map(ChatFromJSON)),
        'messages': json['messages'] == null ? undefined : ((json['messages'] as Array<any>).map(MessageFromJSON)),
    };
}

export function LabelAssociationsToJSON(json: any): LabelAssociations {
    return LabelAssociationsToJSONTyped(json, false);
}

export function LabelAssociationsToJSONTyped(value?: LabelAssociations | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chats': value['chats'] == null ? undefined : ((value['chats'] as Array<any>).map(ChatToJSON)),
        'messages': value['messages'] == null ? undefined : ((value['messages'] as Array<any>).map(MessageToJSON)),
    };
}

