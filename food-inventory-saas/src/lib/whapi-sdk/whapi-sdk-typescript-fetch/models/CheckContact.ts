/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CheckContact
 */
export interface CheckContact {
    /**
     * The value you sent in the contacts field of the JSON request.
     * @type {string}
     * @memberof CheckContact
     */
    input?: string;
    /**
     * Status of the user.
     * @type {string}
     * @memberof CheckContact
     */
    status?: CheckContactStatusEnum;
    /**
     * WhatsApp user identifier that can be used in other API calls. Only returned if the status is valid.
     * @type {string}
     * @memberof CheckContact
     */
    waId?: string;
}


/**
 * @export
 */
export const CheckContactStatusEnum = {
    Valid: 'valid',
    Invalid: 'invalid'
} as const;
export type CheckContactStatusEnum = typeof CheckContactStatusEnum[keyof typeof CheckContactStatusEnum];


/**
 * Check if a given object implements the CheckContact interface.
 */
export function instanceOfCheckContact(value: object): value is CheckContact {
    return true;
}

export function CheckContactFromJSON(json: any): CheckContact {
    return CheckContactFromJSONTyped(json, false);
}

export function CheckContactFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckContact {
    if (json == null) {
        return json;
    }
    return {
        
        'input': json['input'] == null ? undefined : json['input'],
        'status': json['status'] == null ? undefined : json['status'],
        'waId': json['wa_id'] == null ? undefined : json['wa_id'],
    };
}

export function CheckContactToJSON(json: any): CheckContact {
    return CheckContactToJSONTyped(json, false);
}

export function CheckContactToJSONTyped(value?: CheckContact | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'input': value['input'],
        'status': value['status'],
        'wa_id': value['waId'],
    };
}

