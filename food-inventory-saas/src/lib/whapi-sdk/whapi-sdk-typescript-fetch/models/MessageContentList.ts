/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageContentListSectionsInner } from './MessageContentListSectionsInner';
import {
    MessageContentListSectionsInnerFromJSON,
    MessageContentListSectionsInnerFromJSONTyped,
    MessageContentListSectionsInnerToJSON,
    MessageContentListSectionsInnerToJSONTyped,
} from './MessageContentListSectionsInner';

/**
 * 
 * @export
 * @interface MessageContentList
 */
export interface MessageContentList {
    /**
     * 
     * @type {string}
     * @memberof MessageContentList
     */
    header?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageContentList
     */
    body?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageContentList
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageContentList
     */
    footer?: string;
    /**
     * 
     * @type {Array<MessageContentListSectionsInner>}
     * @memberof MessageContentList
     */
    sections?: Array<MessageContentListSectionsInner>;
}

/**
 * Check if a given object implements the MessageContentList interface.
 */
export function instanceOfMessageContentList(value: object): value is MessageContentList {
    return true;
}

export function MessageContentListFromJSON(json: any): MessageContentList {
    return MessageContentListFromJSONTyped(json, false);
}

export function MessageContentListFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageContentList {
    if (json == null) {
        return json;
    }
    return {
        
        'header': json['header'] == null ? undefined : json['header'],
        'body': json['body'] == null ? undefined : json['body'],
        'label': json['label'] == null ? undefined : json['label'],
        'footer': json['footer'] == null ? undefined : json['footer'],
        'sections': json['sections'] == null ? undefined : ((json['sections'] as Array<any>).map(MessageContentListSectionsInnerFromJSON)),
    };
}

export function MessageContentListToJSON(json: any): MessageContentList {
    return MessageContentListToJSONTyped(json, false);
}

export function MessageContentListToJSONTyped(value?: MessageContentList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'header': value['header'],
        'body': value['body'],
        'label': value['label'],
        'footer': value['footer'],
        'sections': value['sections'] == null ? undefined : ((value['sections'] as Array<any>).map(MessageContentListSectionsInnerToJSON)),
    };
}

