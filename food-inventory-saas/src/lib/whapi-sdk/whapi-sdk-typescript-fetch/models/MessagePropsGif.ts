/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MessagePropsGif
 */
export interface MessagePropsGif {
    /**
     * Optional. Text caption under the media.
     * @type {string}
     * @memberof MessagePropsGif
     */
    caption?: string;
    /**
     * Optional. Base64 encoded preview of the media. In JPEG format.
     * @type {string}
     * @memberof MessagePropsGif
     */
    preview?: string;
    /**
     * Width of the media in pixels
     * @type {number}
     * @memberof MessagePropsGif
     */
    width?: number;
    /**
     * Height of the media in pixels
     * @type {number}
     * @memberof MessagePropsGif
     */
    height?: number;
    /**
     * Optional. This field indicates whether the GIF should be played automatically when the message is received.
     * @type {boolean}
     * @memberof MessagePropsGif
     */
    autoplay?: boolean;
}

/**
 * Check if a given object implements the MessagePropsGif interface.
 */
export function instanceOfMessagePropsGif(value: object): value is MessagePropsGif {
    return true;
}

export function MessagePropsGifFromJSON(json: any): MessagePropsGif {
    return MessagePropsGifFromJSONTyped(json, false);
}

export function MessagePropsGifFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessagePropsGif {
    if (json == null) {
        return json;
    }
    return {
        
        'caption': json['caption'] == null ? undefined : json['caption'],
        'preview': json['preview'] == null ? undefined : json['preview'],
        'width': json['width'] == null ? undefined : json['width'],
        'height': json['height'] == null ? undefined : json['height'],
        'autoplay': json['autoplay'] == null ? undefined : json['autoplay'],
    };
}

export function MessagePropsGifToJSON(json: any): MessagePropsGif {
    return MessagePropsGifToJSONTyped(json, false);
}

export function MessagePropsGifToJSONTyped(value?: MessagePropsGif | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'caption': value['caption'],
        'preview': value['preview'],
        'width': value['width'],
        'height': value['height'],
        'autoplay': value['autoplay'],
    };
}

