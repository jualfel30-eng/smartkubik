/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebhookEventType
 */
export interface WebhookEventType {
    /**
     * 
     * @type {string}
     * @memberof WebhookEventType
     */
    type?: WebhookEventTypeTypeEnum;
}


/**
 * @export
 */
export const WebhookEventTypeTypeEnum = {
    Messages: 'messages',
    Statuses: 'statuses',
    Chats: 'chats',
    Contacts: 'contacts',
    Groups: 'groups',
    Presences: 'presences',
    Calls: 'calls',
    Channel: 'channel',
    Users: 'users',
    Labels: 'labels',
    Service: 'service'
} as const;
export type WebhookEventTypeTypeEnum = typeof WebhookEventTypeTypeEnum[keyof typeof WebhookEventTypeTypeEnum];


/**
 * Check if a given object implements the WebhookEventType interface.
 */
export function instanceOfWebhookEventType(value: object): value is WebhookEventType {
    return true;
}

export function WebhookEventTypeFromJSON(json: any): WebhookEventType {
    return WebhookEventTypeFromJSONTyped(json, false);
}

export function WebhookEventTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookEventType {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function WebhookEventTypeToJSON(json: any): WebhookEventType {
    return WebhookEventTypeToJSONTyped(json, false);
}

export function WebhookEventTypeToJSONTyped(value?: WebhookEventType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
    };
}

