/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GroupApplicationChange
 */
export interface GroupApplicationChange {
    /**
     * Chat ID
     * @type {string}
     * @memberof GroupApplicationChange
     */
    chatId?: string;
    /**
     * result of operation
     * @type {boolean}
     * @memberof GroupApplicationChange
     */
    success?: boolean;
    /**
     * error details
     * @type {string}
     * @memberof GroupApplicationChange
     */
    error?: string;
}

/**
 * Check if a given object implements the GroupApplicationChange interface.
 */
export function instanceOfGroupApplicationChange(value: object): value is GroupApplicationChange {
    return true;
}

export function GroupApplicationChangeFromJSON(json: any): GroupApplicationChange {
    return GroupApplicationChangeFromJSONTyped(json, false);
}

export function GroupApplicationChangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupApplicationChange {
    if (json == null) {
        return json;
    }
    return {
        
        'chatId': json['chatId'] == null ? undefined : json['chatId'],
        'success': json['success'] == null ? undefined : json['success'],
        'error': json['error'] == null ? undefined : json['error'],
    };
}

export function GroupApplicationChangeToJSON(json: any): GroupApplicationChange {
    return GroupApplicationChangeToJSONTyped(json, false);
}

export function GroupApplicationChangeToJSONTyped(value?: GroupApplicationChange | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chatId': value['chatId'],
        'success': value['success'],
        'error': value['error'],
    };
}

