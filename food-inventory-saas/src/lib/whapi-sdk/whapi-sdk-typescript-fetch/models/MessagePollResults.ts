/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MessagePollResults
 */
export interface MessagePollResults {
    /**
     * Title of poll
     * @type {string}
     * @memberof MessagePollResults
     */
    title: string;
    /**
     * Options of poll
     * @type {Array<string>}
     * @memberof MessagePollResults
     */
    options: Array<string>;
    /**
     * Number of selectable options in poll (1 - can choose only one option, 0 - any number of options)
     * @type {number}
     * @memberof MessagePollResults
     */
    voteLimit?: number;
    /**
     * Total count of selected options
     * @type {number}
     * @memberof MessagePollResults
     */
    total?: number;
}

/**
 * Check if a given object implements the MessagePollResults interface.
 */
export function instanceOfMessagePollResults(value: object): value is MessagePollResults {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('options' in value) || value['options'] === undefined) return false;
    return true;
}

export function MessagePollResultsFromJSON(json: any): MessagePollResults {
    return MessagePollResultsFromJSONTyped(json, false);
}

export function MessagePollResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessagePollResults {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'options': json['options'],
        'voteLimit': json['vote_limit'] == null ? undefined : json['vote_limit'],
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function MessagePollResultsToJSON(json: any): MessagePollResults {
    return MessagePollResultsToJSONTyped(json, false);
}

export function MessagePollResultsToJSONTyped(value?: MessagePollResults | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'options': value['options'],
        'vote_limit': value['voteLimit'],
        'total': value['total'],
    };
}

