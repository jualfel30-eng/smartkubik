/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EditNewsletterRequest
 */
export interface EditNewsletterRequest {
    /**
     * 
     * @type {string}
     * @memberof EditNewsletterRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof EditNewsletterRequest
     */
    description?: string;
    /**
     * Newsletter jpeg picture in base64 format
     * @type {string}
     * @memberof EditNewsletterRequest
     */
    newsletterPic?: string;
    /**
     * Available reactions
     * @type {string}
     * @memberof EditNewsletterRequest
     */
    reactions?: EditNewsletterRequestReactionsEnum;
}


/**
 * @export
 */
export const EditNewsletterRequestReactionsEnum = {
    All: 'all',
    Basic: 'basic',
    Blocklist: 'blocklist',
    None: 'none'
} as const;
export type EditNewsletterRequestReactionsEnum = typeof EditNewsletterRequestReactionsEnum[keyof typeof EditNewsletterRequestReactionsEnum];


/**
 * Check if a given object implements the EditNewsletterRequest interface.
 */
export function instanceOfEditNewsletterRequest(value: object): value is EditNewsletterRequest {
    return true;
}

export function EditNewsletterRequestFromJSON(json: any): EditNewsletterRequest {
    return EditNewsletterRequestFromJSONTyped(json, false);
}

export function EditNewsletterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditNewsletterRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'newsletterPic': json['newsletter_pic'] == null ? undefined : json['newsletter_pic'],
        'reactions': json['reactions'] == null ? undefined : json['reactions'],
    };
}

export function EditNewsletterRequestToJSON(json: any): EditNewsletterRequest {
    return EditNewsletterRequestToJSONTyped(json, false);
}

export function EditNewsletterRequestToJSONTyped(value?: EditNewsletterRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'newsletter_pic': value['newsletterPic'],
        'reactions': value['reactions'],
    };
}

