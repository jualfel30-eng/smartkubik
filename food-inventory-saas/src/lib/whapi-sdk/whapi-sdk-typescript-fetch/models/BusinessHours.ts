/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Working hours
 * @export
 * @interface BusinessHours
 */
export interface BusinessHours {
    /**
     * Day of the week
     * @type {string}
     * @memberof BusinessHours
     */
    day?: BusinessHoursDayEnum;
    /**
     * Mode of working hours. You can not combine both
     * @type {string}
     * @memberof BusinessHours
     */
    mode?: BusinessHoursModeEnum;
    /**
     * Representation on hour in minutes. I.e 9 A.M. - 540
     * @type {number}
     * @memberof BusinessHours
     */
    openTime?: number;
    /**
     * Representation on hour in minutes. I.e 16 - 960
     * @type {number}
     * @memberof BusinessHours
     */
    closeTime?: number;
}


/**
 * @export
 */
export const BusinessHoursDayEnum = {
    Sun: 'sun',
    Mon: 'mon',
    Tue: 'tue',
    Wed: 'wed',
    Thu: 'thu',
    Fri: 'fri',
    Sat: 'sat'
} as const;
export type BusinessHoursDayEnum = typeof BusinessHoursDayEnum[keyof typeof BusinessHoursDayEnum];

/**
 * @export
 */
export const BusinessHoursModeEnum = {
    Open24h: 'open_24h',
    SpecificHours: 'specific_hours'
} as const;
export type BusinessHoursModeEnum = typeof BusinessHoursModeEnum[keyof typeof BusinessHoursModeEnum];


/**
 * Check if a given object implements the BusinessHours interface.
 */
export function instanceOfBusinessHours(value: object): value is BusinessHours {
    return true;
}

export function BusinessHoursFromJSON(json: any): BusinessHours {
    return BusinessHoursFromJSONTyped(json, false);
}

export function BusinessHoursFromJSONTyped(json: any, ignoreDiscriminator: boolean): BusinessHours {
    if (json == null) {
        return json;
    }
    return {
        
        'day': json['day'] == null ? undefined : json['day'],
        'mode': json['mode'] == null ? undefined : json['mode'],
        'openTime': json['openTime'] == null ? undefined : json['openTime'],
        'closeTime': json['closeTime'] == null ? undefined : json['closeTime'],
    };
}

export function BusinessHoursToJSON(json: any): BusinessHours {
    return BusinessHoursToJSONTyped(json, false);
}

export function BusinessHoursToJSONTyped(value?: BusinessHours | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'day': value['day'],
        'mode': value['mode'],
        'openTime': value['openTime'],
        'closeTime': value['closeTime'],
    };
}

