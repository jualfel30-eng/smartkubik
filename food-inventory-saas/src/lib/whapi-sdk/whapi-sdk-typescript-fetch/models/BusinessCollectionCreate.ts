/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BusinessCollectionCreate
 */
export interface BusinessCollectionCreate {
    /**
     * Collection name
     * @type {string}
     * @memberof BusinessCollectionCreate
     */
    name: string;
    /**
     * Collection's Products
     * @type {Array<string>}
     * @memberof BusinessCollectionCreate
     */
    products: Array<string>;
}

/**
 * Check if a given object implements the BusinessCollectionCreate interface.
 */
export function instanceOfBusinessCollectionCreate(value: object): value is BusinessCollectionCreate {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('products' in value) || value['products'] === undefined) return false;
    return true;
}

export function BusinessCollectionCreateFromJSON(json: any): BusinessCollectionCreate {
    return BusinessCollectionCreateFromJSONTyped(json, false);
}

export function BusinessCollectionCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): BusinessCollectionCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'products': json['products'],
    };
}

export function BusinessCollectionCreateToJSON(json: any): BusinessCollectionCreate {
    return BusinessCollectionCreateToJSONTyped(json, false);
}

export function BusinessCollectionCreateToJSONTyped(value?: BusinessCollectionCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'products': value['products'],
    };
}

