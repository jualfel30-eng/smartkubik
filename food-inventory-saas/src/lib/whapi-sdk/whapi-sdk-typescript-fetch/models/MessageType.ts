/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Message type
 * @export
 */
export const MessageType = {
    Text: 'text',
    Image: 'image',
    Video: 'video',
    Gif: 'gif',
    Audio: 'audio',
    Voice: 'voice',
    Short: 'short',
    Document: 'document',
    DocumentWithCaption: 'documentWithCaption',
    LinkPreview: 'link_preview',
    Location: 'location',
    LiveLocation: 'live_location',
    Contact: 'contact',
    ContactList: 'contact_list',
    Sticker: 'sticker',
    System: 'system',
    Call: 'call',
    Unknown: 'unknown',
    Action: 'action',
    GroupInvite: 'group_invite',
    NewsletterInvite: 'newsletter_invite',
    AdminInvite: 'admin_invite',
    Product: 'product',
    Catalog: 'catalog',
    Interactive: 'interactive',
    Reply: 'reply',
    Poll: 'poll',
    Hsm: 'hsm',
    Order: 'order',
    Story: 'story',
    Event: 'event',
    Buttons: 'buttons',
    List: 'list',
    Pin: 'pin'
} as const;
export type MessageType = typeof MessageType[keyof typeof MessageType];


export function instanceOfMessageType(value: any): boolean {
    for (const key in MessageType) {
        if (Object.prototype.hasOwnProperty.call(MessageType, key)) {
            if (MessageType[key as keyof typeof MessageType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function MessageTypeFromJSON(json: any): MessageType {
    return MessageTypeFromJSONTyped(json, false);
}

export function MessageTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageType {
    return json as MessageType;
}

export function MessageTypeToJSON(value?: MessageType | null): any {
    return value as any;
}

export function MessageTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): MessageType {
    return value as MessageType;
}

