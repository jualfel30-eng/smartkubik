/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MessageContentLinkPreview
 */
export interface MessageContentLinkPreview {
    /**
     * Message text
     * @type {string}
     * @memberof MessageContentLinkPreview
     */
    body: string;
    /**
     * Title of the link
     * @type {string}
     * @memberof MessageContentLinkPreview
     */
    title: string;
    /**
     * Description of the link
     * @type {string}
     * @memberof MessageContentLinkPreview
     */
    description?: string;
    /**
     * Canonical URL of the link (for example, if the link is shortened)
     * @type {string}
     * @memberof MessageContentLinkPreview
     */
    canonical?: string;
    /**
     * Base64 encoded image for mini version link preview. In JPEG format
     * @type {string}
     * @memberof MessageContentLinkPreview
     */
    preview?: string;
    /**
     * Is view once
     * @type {boolean}
     * @memberof MessageContentLinkPreview
     */
    viewOnce?: boolean;
    /**
     * URL of the link
     * @type {string}
     * @memberof MessageContentLinkPreview
     */
    url?: string;
    /**
     * Media ID
     * @type {string}
     * @memberof MessageContentLinkPreview
     */
    id?: string;
    /**
     * Optional. Link to media
     * @type {string}
     * @memberof MessageContentLinkPreview
     */
    link?: string;
    /**
     * Checksum
     * @type {string}
     * @memberof MessageContentLinkPreview
     */
    sha256?: string;
    /**
     * Contact ID
     * @type {string}
     * @memberof MessageContentLinkPreview
     */
    catalogId?: string;
    /**
     * Newsletter ID
     * @type {string}
     * @memberof MessageContentLinkPreview
     */
    newsletterId?: string;
    /**
     * Invite code
     * @type {string}
     * @memberof MessageContentLinkPreview
     */
    inviteCode?: string;
}

/**
 * Check if a given object implements the MessageContentLinkPreview interface.
 */
export function instanceOfMessageContentLinkPreview(value: object): value is MessageContentLinkPreview {
    if (!('body' in value) || value['body'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function MessageContentLinkPreviewFromJSON(json: any): MessageContentLinkPreview {
    return MessageContentLinkPreviewFromJSONTyped(json, false);
}

export function MessageContentLinkPreviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageContentLinkPreview {
    if (json == null) {
        return json;
    }
    return {
        
        'body': json['body'],
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'canonical': json['canonical'] == null ? undefined : json['canonical'],
        'preview': json['preview'] == null ? undefined : json['preview'],
        'viewOnce': json['view_once'] == null ? undefined : json['view_once'],
        'url': json['url'] == null ? undefined : json['url'],
        'id': json['id'] == null ? undefined : json['id'],
        'link': json['link'] == null ? undefined : json['link'],
        'sha256': json['sha256'] == null ? undefined : json['sha256'],
        'catalogId': json['catalog_id'] == null ? undefined : json['catalog_id'],
        'newsletterId': json['newsletter_id'] == null ? undefined : json['newsletter_id'],
        'inviteCode': json['invite_code'] == null ? undefined : json['invite_code'],
    };
}

export function MessageContentLinkPreviewToJSON(json: any): MessageContentLinkPreview {
    return MessageContentLinkPreviewToJSONTyped(json, false);
}

export function MessageContentLinkPreviewToJSONTyped(value?: MessageContentLinkPreview | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'body': value['body'],
        'title': value['title'],
        'description': value['description'],
        'canonical': value['canonical'],
        'preview': value['preview'],
        'view_once': value['viewOnce'],
        'url': value['url'],
        'id': value['id'],
        'link': value['link'],
        'sha256': value['sha256'],
        'catalog_id': value['catalogId'],
        'newsletter_id': value['newsletterId'],
        'invite_code': value['inviteCode'],
    };
}

