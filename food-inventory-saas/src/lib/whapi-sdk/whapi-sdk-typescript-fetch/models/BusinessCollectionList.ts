/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BusinessCollection } from './BusinessCollection';
import {
    BusinessCollectionFromJSON,
    BusinessCollectionFromJSONTyped,
    BusinessCollectionToJSON,
    BusinessCollectionToJSONTyped,
} from './BusinessCollection';

/**
 * 
 * @export
 * @interface BusinessCollectionList
 */
export interface BusinessCollectionList {
    /**
     * Count of requested chats
     * @type {number}
     * @memberof BusinessCollectionList
     */
    count?: number;
    /**
     * Total number of returned chats
     * @type {number}
     * @memberof BusinessCollectionList
     */
    total?: number;
    /**
     * Offset of requested chats
     * @type {number}
     * @memberof BusinessCollectionList
     */
    offset?: number;
    /**
     * 
     * @type {Array<BusinessCollection>}
     * @memberof BusinessCollectionList
     */
    collections?: Array<BusinessCollection>;
}

/**
 * Check if a given object implements the BusinessCollectionList interface.
 */
export function instanceOfBusinessCollectionList(value: object): value is BusinessCollectionList {
    return true;
}

export function BusinessCollectionListFromJSON(json: any): BusinessCollectionList {
    return BusinessCollectionListFromJSONTyped(json, false);
}

export function BusinessCollectionListFromJSONTyped(json: any, ignoreDiscriminator: boolean): BusinessCollectionList {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'total': json['total'] == null ? undefined : json['total'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'collections': json['collections'] == null ? undefined : ((json['collections'] as Array<any>).map(BusinessCollectionFromJSON)),
    };
}

export function BusinessCollectionListToJSON(json: any): BusinessCollectionList {
    return BusinessCollectionListToJSONTyped(json, false);
}

export function BusinessCollectionListToJSONTyped(value?: BusinessCollectionList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'total': value['total'],
        'offset': value['offset'],
        'collections': value['collections'] == null ? undefined : ((value['collections'] as Array<any>).map(BusinessCollectionToJSON)),
    };
}

