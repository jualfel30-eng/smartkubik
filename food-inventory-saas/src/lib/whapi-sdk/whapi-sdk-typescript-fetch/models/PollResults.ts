/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PollResults
 */
export interface PollResults {
    /**
     * option ID
     * @type {string}
     * @memberof PollResults
     */
    id: string;
    /**
     * option name
     * @type {string}
     * @memberof PollResults
     */
    name: string;
    /**
     * Number of votes for this option
     * @type {number}
     * @memberof PollResults
     */
    count: number;
    /**
     * List of users who voted for this option
     * @type {Array<string>}
     * @memberof PollResults
     */
    voters: Array<string>;
}

/**
 * Check if a given object implements the PollResults interface.
 */
export function instanceOfPollResults(value: object): value is PollResults {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('voters' in value) || value['voters'] === undefined) return false;
    return true;
}

export function PollResultsFromJSON(json: any): PollResults {
    return PollResultsFromJSONTyped(json, false);
}

export function PollResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PollResults {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'count': json['count'],
        'voters': json['voters'],
    };
}

export function PollResultsToJSON(json: any): PollResults {
    return PollResultsToJSONTyped(json, false);
}

export function PollResultsToJSONTyped(value?: PollResults | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'count': value['count'],
        'voters': value['voters'],
    };
}

