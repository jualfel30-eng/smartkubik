/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Label
 */
export interface Label {
    /**
     * Label ID
     * @type {string}
     * @memberof Label
     */
    id: string;
    /**
     * Label name
     * @type {string}
     * @memberof Label
     */
    name: string;
    /**
     * Label color
     * @type {string}
     * @memberof Label
     */
    color: LabelColorEnum;
    /**
     * Number of objects associated with this label
     * @type {number}
     * @memberof Label
     */
    count?: number;
}


/**
 * @export
 */
export const LabelColorEnum = {
    Salmon: 'salmon',
    Lightskyblue: 'lightskyblue',
    Gold: 'gold',
    Plum: 'plum',
    Silver: 'silver',
    Mediumturquoise: 'mediumturquoise',
    Violet: 'violet',
    Goldenrod: 'goldenrod',
    Cornflowerblue: 'cornflowerblue',
    Greenyellow: 'greenyellow',
    Cyan: 'cyan',
    Lightpink: 'lightpink',
    Mediumaquamarine: 'mediumaquamarine',
    Orangered: 'orangered',
    Deepskyblue: 'deepskyblue',
    Limegreen: 'limegreen',
    Darkorange: 'darkorange',
    Lightsteelblue: 'lightsteelblue',
    Mediumpurple: 'mediumpurple',
    Rebeccapurple: 'rebeccapurple'
} as const;
export type LabelColorEnum = typeof LabelColorEnum[keyof typeof LabelColorEnum];


/**
 * Check if a given object implements the Label interface.
 */
export function instanceOfLabel(value: object): value is Label {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('color' in value) || value['color'] === undefined) return false;
    return true;
}

export function LabelFromJSON(json: any): Label {
    return LabelFromJSONTyped(json, false);
}

export function LabelFromJSONTyped(json: any, ignoreDiscriminator: boolean): Label {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'color': json['color'],
        'count': json['count'] == null ? undefined : json['count'],
    };
}

export function LabelToJSON(json: any): Label {
    return LabelToJSONTyped(json, false);
}

export function LabelToJSONTyped(value?: Label | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'color': value['color'],
        'count': value['count'],
    };
}

