/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ActionListSectionsInner } from './ActionListSectionsInner';
import {
    ActionListSectionsInnerFromJSON,
    ActionListSectionsInnerFromJSONTyped,
    ActionListSectionsInnerToJSON,
    ActionListSectionsInnerToJSONTyped,
} from './ActionListSectionsInner';

/**
 * 
 * @export
 * @interface ActionList
 */
export interface ActionList {
    /**
     * Section of the message
     * @type {Array<ActionListSectionsInner>}
     * @memberof ActionList
     */
    sections?: Array<ActionListSectionsInner>;
    /**
     * Button text for list of message
     * @type {string}
     * @memberof ActionList
     */
    button?: string;
}

/**
 * Check if a given object implements the ActionList interface.
 */
export function instanceOfActionList(value: object): value is ActionList {
    return true;
}

export function ActionListFromJSON(json: any): ActionList {
    return ActionListFromJSONTyped(json, false);
}

export function ActionListFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActionList {
    if (json == null) {
        return json;
    }
    return {
        
        'sections': json['sections'] == null ? undefined : ((json['sections'] as Array<any>).map(ActionListSectionsInnerFromJSON)),
        'button': json['button'] == null ? undefined : json['button'],
    };
}

export function ActionListToJSON(json: any): ActionList {
    return ActionListToJSONTyped(json, false);
}

export function ActionListToJSONTyped(value?: ActionList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'sections': value['sections'] == null ? undefined : ((value['sections'] as Array<any>).map(ActionListSectionsInnerToJSON)),
        'button': value['button'],
    };
}

