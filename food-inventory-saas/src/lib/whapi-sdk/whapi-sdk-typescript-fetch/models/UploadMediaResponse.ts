/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UploadMedia } from './UploadMedia';
import {
    UploadMediaFromJSON,
    UploadMediaFromJSONTyped,
    UploadMediaToJSON,
    UploadMediaToJSONTyped,
} from './UploadMedia';

/**
 * 
 * @export
 * @interface UploadMediaResponse
 */
export interface UploadMediaResponse {
    /**
     * 
     * @type {Array<UploadMedia>}
     * @memberof UploadMediaResponse
     */
    media?: Array<UploadMedia>;
}

/**
 * Check if a given object implements the UploadMediaResponse interface.
 */
export function instanceOfUploadMediaResponse(value: object): value is UploadMediaResponse {
    return true;
}

export function UploadMediaResponseFromJSON(json: any): UploadMediaResponse {
    return UploadMediaResponseFromJSONTyped(json, false);
}

export function UploadMediaResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UploadMediaResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'media': json['media'] == null ? undefined : ((json['media'] as Array<any>).map(UploadMediaFromJSON)),
    };
}

export function UploadMediaResponseToJSON(json: any): UploadMediaResponse {
    return UploadMediaResponseToJSONTyped(json, false);
}

export function UploadMediaResponseToJSONTyped(value?: UploadMediaResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'media': value['media'] == null ? undefined : ((value['media'] as Array<any>).map(UploadMediaToJSON)),
    };
}

