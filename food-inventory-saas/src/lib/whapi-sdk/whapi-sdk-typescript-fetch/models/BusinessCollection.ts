/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
    ProductToJSONTyped,
} from './Product';

/**
 * 
 * @export
 * @interface BusinessCollection
 */
export interface BusinessCollection {
    /**
     * Collection ID
     * @type {string}
     * @memberof BusinessCollection
     */
    id: string;
    /**
     * Collection name
     * @type {string}
     * @memberof BusinessCollection
     */
    name: string;
    /**
     * Collection's Products
     * @type {Array<Product>}
     * @memberof BusinessCollection
     */
    products?: Array<Product>;
    /**
     * Moderation status
     * @type {string}
     * @memberof BusinessCollection
     */
    status?: string;
}

/**
 * Check if a given object implements the BusinessCollection interface.
 */
export function instanceOfBusinessCollection(value: object): value is BusinessCollection {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function BusinessCollectionFromJSON(json: any): BusinessCollection {
    return BusinessCollectionFromJSONTyped(json, false);
}

export function BusinessCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): BusinessCollection {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'products': json['products'] == null ? undefined : ((json['products'] as Array<any>).map(ProductFromJSON)),
        'status': json['status'] == null ? undefined : json['status'],
    };
}

export function BusinessCollectionToJSON(json: any): BusinessCollection {
    return BusinessCollectionToJSONTyped(json, false);
}

export function BusinessCollectionToJSONTyped(value?: BusinessCollection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'products': value['products'] == null ? undefined : ((value['products'] as Array<any>).map(ProductToJSON)),
        'status': value['status'],
    };
}

