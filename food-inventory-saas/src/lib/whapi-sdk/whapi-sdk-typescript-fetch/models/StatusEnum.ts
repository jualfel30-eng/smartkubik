/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Message ack status
 * @export
 */
export const StatusEnum = {
    /**
    * Message failed to send (Red error triangle in WhatsApp Mobile)
    */
    Failed: 'failed',
    /**
    * Message pending to send (One clock in WhatsApp Mobile)
    */
    Pending: 'pending',
    /**
    * Message received by WhatsApp server (One checkmark in WhatsApp Mobile)
    */
    Sent: 'sent',
    /**
    * Message delivered to recipient (Two checkmarks in WhatsApp Mobile)
    */
    Delivered: 'delivered',
    /**
    * Message read by recipient (Two blue checkmarks in WhatsApp Mobile)
    */
    Read: 'read',
    /**
    * Voice-message played by recipient (Two blue checkmarks in WhatsApp Mobile)
    */
    Played: 'played',
    /**
    * Message deleted by the user
    */
    Deleted: 'deleted'
} as const;
export type StatusEnum = typeof StatusEnum[keyof typeof StatusEnum];


export function instanceOfStatusEnum(value: any): boolean {
    for (const key in StatusEnum) {
        if (Object.prototype.hasOwnProperty.call(StatusEnum, key)) {
            if (StatusEnum[key as keyof typeof StatusEnum] === value) {
                return true;
            }
        }
    }
    return false;
}

export function StatusEnumFromJSON(json: any): StatusEnum {
    return StatusEnumFromJSONTyped(json, false);
}

export function StatusEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatusEnum {
    return json as StatusEnum;
}

export function StatusEnumToJSON(value?: StatusEnum | null): any {
    return value as any;
}

export function StatusEnumToJSONTyped(value: any, ignoreDiscriminator: boolean): StatusEnum {
    return value as StatusEnum;
}

