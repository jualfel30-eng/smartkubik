/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
    ProductToJSONTyped,
} from './Product';

/**
 * 
 * @export
 * @interface ProductsList
 */
export interface ProductsList {
    /**
     * Count of requested chats
     * @type {number}
     * @memberof ProductsList
     */
    count?: number;
    /**
     * Total number of returned chats
     * @type {number}
     * @memberof ProductsList
     */
    total?: number;
    /**
     * Offset of requested chats
     * @type {number}
     * @memberof ProductsList
     */
    offset?: number;
    /**
     * 
     * @type {Array<Product>}
     * @memberof ProductsList
     */
    products?: Array<Product>;
}

/**
 * Check if a given object implements the ProductsList interface.
 */
export function instanceOfProductsList(value: object): value is ProductsList {
    return true;
}

export function ProductsListFromJSON(json: any): ProductsList {
    return ProductsListFromJSONTyped(json, false);
}

export function ProductsListFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductsList {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'total': json['total'] == null ? undefined : json['total'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'products': json['products'] == null ? undefined : ((json['products'] as Array<any>).map(ProductFromJSON)),
    };
}

export function ProductsListToJSON(json: any): ProductsList {
    return ProductsListToJSONTyped(json, false);
}

export function ProductsListToJSONTyped(value?: ProductsList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'total': value['total'],
        'offset': value['offset'],
        'products': value['products'] == null ? undefined : ((value['products'] as Array<any>).map(ProductToJSON)),
    };
}

