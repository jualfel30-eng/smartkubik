/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateNewsletterRequest
 */
export interface CreateNewsletterRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateNewsletterRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateNewsletterRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateNewsletterRequest
     */
    newsletterPic?: string;
}

/**
 * Check if a given object implements the CreateNewsletterRequest interface.
 */
export function instanceOfCreateNewsletterRequest(value: object): value is CreateNewsletterRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function CreateNewsletterRequestFromJSON(json: any): CreateNewsletterRequest {
    return CreateNewsletterRequestFromJSONTyped(json, false);
}

export function CreateNewsletterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateNewsletterRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'newsletterPic': json['newsletter_pic'] == null ? undefined : json['newsletter_pic'],
    };
}

export function CreateNewsletterRequestToJSON(json: any): CreateNewsletterRequest {
    return CreateNewsletterRequestToJSONTyped(json, false);
}

export function CreateNewsletterRequestToJSONTyped(value?: CreateNewsletterRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'newsletter_pic': value['newsletterPic'],
    };
}

