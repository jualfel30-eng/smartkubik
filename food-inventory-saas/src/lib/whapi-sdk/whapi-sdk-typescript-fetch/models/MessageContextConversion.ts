/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Message conversion data
 * @export
 * @interface MessageContextConversion
 */
export interface MessageContextConversion {
    /**
     * Source of the conversion
     * @type {string}
     * @memberof MessageContextConversion
     */
    source?: string;
    /**
     * Conversion data in Base64
     * @type {string}
     * @memberof MessageContextConversion
     */
    data?: string;
    /**
     * Delay in seconds
     * @type {number}
     * @memberof MessageContextConversion
     */
    delay?: number;
}

/**
 * Check if a given object implements the MessageContextConversion interface.
 */
export function instanceOfMessageContextConversion(value: object): value is MessageContextConversion {
    return true;
}

export function MessageContextConversionFromJSON(json: any): MessageContextConversion {
    return MessageContextConversionFromJSONTyped(json, false);
}

export function MessageContextConversionFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageContextConversion {
    if (json == null) {
        return json;
    }
    return {
        
        'source': json['source'] == null ? undefined : json['source'],
        'data': json['data'] == null ? undefined : json['data'],
        'delay': json['delay'] == null ? undefined : json['delay'],
    };
}

export function MessageContextConversionToJSON(json: any): MessageContextConversion {
    return MessageContextConversionToJSONTyped(json, false);
}

export function MessageContextConversionToJSONTyped(value?: MessageContextConversion | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'source': value['source'],
        'data': value['data'],
        'delay': value['delay'],
    };
}

