/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MessageContentButtonsButtonsInner
 */
export interface MessageContentButtonsButtonsInner {
    /**
     * 
     * @type {string}
     * @memberof MessageContentButtonsButtonsInner
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageContentButtonsButtonsInner
     */
    text?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageContentButtonsButtonsInner
     */
    type?: MessageContentButtonsButtonsInnerTypeEnum;
}


/**
 * @export
 */
export const MessageContentButtonsButtonsInnerTypeEnum = {
    Unknown: 'UNKNOWN',
    Response: 'RESPONSE',
    NativeFlow: 'NATIVE_FLOW'
} as const;
export type MessageContentButtonsButtonsInnerTypeEnum = typeof MessageContentButtonsButtonsInnerTypeEnum[keyof typeof MessageContentButtonsButtonsInnerTypeEnum];


/**
 * Check if a given object implements the MessageContentButtonsButtonsInner interface.
 */
export function instanceOfMessageContentButtonsButtonsInner(value: object): value is MessageContentButtonsButtonsInner {
    return true;
}

export function MessageContentButtonsButtonsInnerFromJSON(json: any): MessageContentButtonsButtonsInner {
    return MessageContentButtonsButtonsInnerFromJSONTyped(json, false);
}

export function MessageContentButtonsButtonsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageContentButtonsButtonsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'text': json['text'] == null ? undefined : json['text'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function MessageContentButtonsButtonsInnerToJSON(json: any): MessageContentButtonsButtonsInner {
    return MessageContentButtonsButtonsInnerToJSONTyped(json, false);
}

export function MessageContentButtonsButtonsInnerToJSONTyped(value?: MessageContentButtonsButtonsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'text': value['text'],
        'type': value['type'],
    };
}

