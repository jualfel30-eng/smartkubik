/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MessagePropsPoll
 */
export interface MessagePropsPoll {
    /**
     * Title of poll
     * @type {string}
     * @memberof MessagePropsPoll
     */
    title: string;
    /**
     * Options of poll
     * @type {Array<string>}
     * @memberof MessagePropsPoll
     */
    options: Array<string>;
    /**
     * Number of selectable options in poll (1 - can choose only one option, 0 - any number of options)
     * @type {number}
     * @memberof MessagePropsPoll
     */
    count?: number;
}

/**
 * Check if a given object implements the MessagePropsPoll interface.
 */
export function instanceOfMessagePropsPoll(value: object): value is MessagePropsPoll {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('options' in value) || value['options'] === undefined) return false;
    return true;
}

export function MessagePropsPollFromJSON(json: any): MessagePropsPoll {
    return MessagePropsPollFromJSONTyped(json, false);
}

export function MessagePropsPollFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessagePropsPoll {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'options': json['options'],
        'count': json['count'] == null ? undefined : json['count'],
    };
}

export function MessagePropsPollToJSON(json: any): MessagePropsPoll {
    return MessagePropsPollToJSONTyped(json, false);
}

export function MessagePropsPollToJSONTyped(value?: MessagePropsPoll | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'options': value['options'],
        'count': value['count'],
    };
}

