/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChannelStatus
 */
export interface ChannelStatus {
    /**
     * Status code
     * @type {number}
     * @memberof ChannelStatus
     */
    code: number;
    /**
     * Status text
     * @type {string}
     * @memberof ChannelStatus
     */
    text: ChannelStatusTextEnum;
}


/**
 * @export
 */
export const ChannelStatusTextEnum = {
    NotInit: 'NOT_INIT',
    Init: 'INIT',
    Launch: 'LAUNCH',
    Qr: 'QR',
    Auth: 'AUTH',
    Error: 'ERROR',
    SyncError: 'SYNC_ERROR'
} as const;
export type ChannelStatusTextEnum = typeof ChannelStatusTextEnum[keyof typeof ChannelStatusTextEnum];


/**
 * Check if a given object implements the ChannelStatus interface.
 */
export function instanceOfChannelStatus(value: object): value is ChannelStatus {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    return true;
}

export function ChannelStatusFromJSON(json: any): ChannelStatus {
    return ChannelStatusFromJSONTyped(json, false);
}

export function ChannelStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'text': json['text'],
    };
}

export function ChannelStatusToJSON(json: any): ChannelStatus {
    return ChannelStatusToJSONTyped(json, false);
}

export function ChannelStatusToJSONTyped(value?: ChannelStatus | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'text': value['text'],
    };
}

