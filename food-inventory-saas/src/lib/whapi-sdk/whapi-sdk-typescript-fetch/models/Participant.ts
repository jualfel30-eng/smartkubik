/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Participant
 */
export interface Participant {
    /**
     * Contact ID
     * @type {string}
     * @memberof Participant
     */
    id: string;
    /**
     * Participant rank
     * @type {string}
     * @memberof Participant
     */
    rank: ParticipantRankEnum;
}


/**
 * @export
 */
export const ParticipantRankEnum = {
    Admin: 'admin',
    Member: 'member',
    Creator: 'creator'
} as const;
export type ParticipantRankEnum = typeof ParticipantRankEnum[keyof typeof ParticipantRankEnum];


/**
 * Check if a given object implements the Participant interface.
 */
export function instanceOfParticipant(value: object): value is Participant {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('rank' in value) || value['rank'] === undefined) return false;
    return true;
}

export function ParticipantFromJSON(json: any): Participant {
    return ParticipantFromJSONTyped(json, false);
}

export function ParticipantFromJSONTyped(json: any, ignoreDiscriminator: boolean): Participant {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'rank': json['rank'],
    };
}

export function ParticipantToJSON(json: any): Participant {
    return ParticipantToJSONTyped(json, false);
}

export function ParticipantToJSONTyped(value?: Participant | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'rank': value['rank'],
    };
}

