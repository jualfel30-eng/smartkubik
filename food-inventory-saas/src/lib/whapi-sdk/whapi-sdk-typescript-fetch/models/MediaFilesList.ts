/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MediaFile } from './MediaFile';
import {
    MediaFileFromJSON,
    MediaFileFromJSONTyped,
    MediaFileToJSON,
    MediaFileToJSONTyped,
} from './MediaFile';

/**
 * 
 * @export
 * @interface MediaFilesList
 */
export interface MediaFilesList {
    /**
     * Count of requested chats
     * @type {number}
     * @memberof MediaFilesList
     */
    count?: number;
    /**
     * Total number of returned chats
     * @type {number}
     * @memberof MediaFilesList
     */
    total?: number;
    /**
     * Offset of requested chats
     * @type {number}
     * @memberof MediaFilesList
     */
    offset?: number;
    /**
     * 
     * @type {Array<MediaFile>}
     * @memberof MediaFilesList
     */
    files?: Array<MediaFile>;
}

/**
 * Check if a given object implements the MediaFilesList interface.
 */
export function instanceOfMediaFilesList(value: object): value is MediaFilesList {
    return true;
}

export function MediaFilesListFromJSON(json: any): MediaFilesList {
    return MediaFilesListFromJSONTyped(json, false);
}

export function MediaFilesListFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaFilesList {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'total': json['total'] == null ? undefined : json['total'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(MediaFileFromJSON)),
    };
}

export function MediaFilesListToJSON(json: any): MediaFilesList {
    return MediaFilesListToJSONTyped(json, false);
}

export function MediaFilesListToJSONTyped(value?: MediaFilesList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'total': value['total'],
        'offset': value['offset'],
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(MediaFileToJSON)),
    };
}

