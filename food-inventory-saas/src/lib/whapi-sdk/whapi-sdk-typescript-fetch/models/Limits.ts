/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Limits
 */
export interface Limits {
    /**
     * Maximum number of messages that can be sent
     * @type {number}
     * @memberof Limits
     */
    messages: number;
    /**
     * List of chat IDs that can be used
     * @type {Array<string>}
     * @memberof Limits
     */
    chats: Array<string>;
    /**
     * Maximum number of check phone numbers
     * @type {number}
     * @memberof Limits
     */
    checks: number;
    /**
     * Maximum number of channel requests
     * @type {number}
     * @memberof Limits
     */
    requests: number;
}

/**
 * Check if a given object implements the Limits interface.
 */
export function instanceOfLimits(value: object): value is Limits {
    if (!('messages' in value) || value['messages'] === undefined) return false;
    if (!('chats' in value) || value['chats'] === undefined) return false;
    if (!('checks' in value) || value['checks'] === undefined) return false;
    if (!('requests' in value) || value['requests'] === undefined) return false;
    return true;
}

export function LimitsFromJSON(json: any): Limits {
    return LimitsFromJSONTyped(json, false);
}

export function LimitsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Limits {
    if (json == null) {
        return json;
    }
    return {
        
        'messages': json['messages'],
        'chats': json['chats'],
        'checks': json['checks'],
        'requests': json['requests'],
    };
}

export function LimitsToJSON(json: any): Limits {
    return LimitsToJSONTyped(json, false);
}

export function LimitsToJSONTyped(value?: Limits | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'messages': value['messages'],
        'chats': value['chats'],
        'checks': value['checks'],
        'requests': value['requests'],
    };
}

