/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebhookTestRequest
 */
export interface WebhookTestRequest {
    /**
     * 
     * @type {string}
     * @memberof WebhookTestRequest
     */
    type: WebhookTestRequestTypeEnum;
    /**
     * Additional headers for webhook. Max 5 headers. <br/>Example: <br/>"Authorization - Bearer token" <br/>"Content-Type - application/json" <br/>"X-Header - value"
     * @type {{ [key: string]: string; }}
     * @memberof WebhookTestRequest
     */
    headers?: { [key: string]: string; };
    /**
     * Inbound and outbound notifications are routed to this URL.
     * @type {string}
     * @memberof WebhookTestRequest
     */
    url: string;
    /**
     * Request method for sending hook.
     * @type {string}
     * @memberof WebhookTestRequest
     */
    mode: WebhookTestRequestModeEnum;
}


/**
 * @export
 */
export const WebhookTestRequestTypeEnum = {
    Messages: 'messages',
    Statuses: 'statuses',
    Chats: 'chats',
    Contacts: 'contacts',
    Groups: 'groups',
    Presences: 'presences',
    Calls: 'calls',
    Channel: 'channel',
    Users: 'users',
    Labels: 'labels',
    Service: 'service'
} as const;
export type WebhookTestRequestTypeEnum = typeof WebhookTestRequestTypeEnum[keyof typeof WebhookTestRequestTypeEnum];

/**
 * @export
 */
export const WebhookTestRequestModeEnum = {
    Body: 'body',
    Path: 'path',
    Method: 'method'
} as const;
export type WebhookTestRequestModeEnum = typeof WebhookTestRequestModeEnum[keyof typeof WebhookTestRequestModeEnum];


/**
 * Check if a given object implements the WebhookTestRequest interface.
 */
export function instanceOfWebhookTestRequest(value: object): value is WebhookTestRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('mode' in value) || value['mode'] === undefined) return false;
    return true;
}

export function WebhookTestRequestFromJSON(json: any): WebhookTestRequest {
    return WebhookTestRequestFromJSONTyped(json, false);
}

export function WebhookTestRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookTestRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'headers': json['headers'] == null ? undefined : json['headers'],
        'url': json['url'],
        'mode': json['mode'],
    };
}

export function WebhookTestRequestToJSON(json: any): WebhookTestRequest {
    return WebhookTestRequestToJSONTyped(json, false);
}

export function WebhookTestRequestToJSONTyped(value?: WebhookTestRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'headers': value['headers'],
        'url': value['url'],
        'mode': value['mode'],
    };
}

