/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HSMButton
 */
export interface HSMButton {
    /**
     * ID of the button
     * @type {string}
     * @memberof HSMButton
     */
    id?: string;
    /**
     * Type of button
     * @type {string}
     * @memberof HSMButton
     */
    type?: HSMButtonTypeEnum;
    /**
     * Button text
     * @type {string}
     * @memberof HSMButton
     */
    text?: string;
    /**
     * URL
     * @type {string}
     * @memberof HSMButton
     */
    url?: string;
    /**
     * Phone number
     * @type {string}
     * @memberof HSMButton
     */
    phoneNumber?: string;
    /**
     * Code
     * @type {string}
     * @memberof HSMButton
     */
    copyCode?: string;
}


/**
 * @export
 */
export const HSMButtonTypeEnum = {
    Simple: 'simple',
    Reply: 'reply',
    Url: 'url',
    PhoneNumber: 'phone_number',
    CopyCode: 'copy_code'
} as const;
export type HSMButtonTypeEnum = typeof HSMButtonTypeEnum[keyof typeof HSMButtonTypeEnum];


/**
 * Check if a given object implements the HSMButton interface.
 */
export function instanceOfHSMButton(value: object): value is HSMButton {
    return true;
}

export function HSMButtonFromJSON(json: any): HSMButton {
    return HSMButtonFromJSONTyped(json, false);
}

export function HSMButtonFromJSONTyped(json: any, ignoreDiscriminator: boolean): HSMButton {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : json['type'],
        'text': json['text'] == null ? undefined : json['text'],
        'url': json['url'] == null ? undefined : json['url'],
        'phoneNumber': json['phone_number'] == null ? undefined : json['phone_number'],
        'copyCode': json['copy_code'] == null ? undefined : json['copy_code'],
    };
}

export function HSMButtonToJSON(json: any): HSMButton {
    return HSMButtonToJSONTyped(json, false);
}

export function HSMButtonToJSONTyped(value?: HSMButton | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
        'text': value['text'],
        'url': value['url'],
        'phone_number': value['phoneNumber'],
        'copy_code': value['copyCode'],
    };
}

