/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateGroupInCommunityRequest
 */
export interface CreateGroupInCommunityRequest {
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateGroupInCommunityRequest
     */
    participants: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CreateGroupInCommunityRequest
     */
    subject: string;
    /**
     * 
     * @type {boolean}
     * @memberof CreateGroupInCommunityRequest
     */
    isHidden?: boolean;
}

/**
 * Check if a given object implements the CreateGroupInCommunityRequest interface.
 */
export function instanceOfCreateGroupInCommunityRequest(value: object): value is CreateGroupInCommunityRequest {
    if (!('participants' in value) || value['participants'] === undefined) return false;
    if (!('subject' in value) || value['subject'] === undefined) return false;
    return true;
}

export function CreateGroupInCommunityRequestFromJSON(json: any): CreateGroupInCommunityRequest {
    return CreateGroupInCommunityRequestFromJSONTyped(json, false);
}

export function CreateGroupInCommunityRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateGroupInCommunityRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'participants': json['participants'],
        'subject': json['subject'],
        'isHidden': json['isHidden'] == null ? undefined : json['isHidden'],
    };
}

export function CreateGroupInCommunityRequestToJSON(json: any): CreateGroupInCommunityRequest {
    return CreateGroupInCommunityRequestToJSONTyped(json, false);
}

export function CreateGroupInCommunityRequestToJSONTyped(value?: CreateGroupInCommunityRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'participants': value['participants'],
        'subject': value['subject'],
        'isHidden': value['isHidden'],
    };
}

