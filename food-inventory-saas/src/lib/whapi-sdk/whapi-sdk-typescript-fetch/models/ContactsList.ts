/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Contact } from './Contact';
import {
    ContactFromJSON,
    ContactFromJSONTyped,
    ContactToJSON,
    ContactToJSONTyped,
} from './Contact';

/**
 * 
 * @export
 * @interface ContactsList
 */
export interface ContactsList {
    /**
     * Count of requested chats
     * @type {number}
     * @memberof ContactsList
     */
    count?: number;
    /**
     * Total number of returned chats
     * @type {number}
     * @memberof ContactsList
     */
    total?: number;
    /**
     * Offset of requested chats
     * @type {number}
     * @memberof ContactsList
     */
    offset?: number;
    /**
     * 
     * @type {Array<Contact>}
     * @memberof ContactsList
     */
    contacts?: Array<Contact>;
}

/**
 * Check if a given object implements the ContactsList interface.
 */
export function instanceOfContactsList(value: object): value is ContactsList {
    return true;
}

export function ContactsListFromJSON(json: any): ContactsList {
    return ContactsListFromJSONTyped(json, false);
}

export function ContactsListFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactsList {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'total': json['total'] == null ? undefined : json['total'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'contacts': json['contacts'] == null ? undefined : ((json['contacts'] as Array<any>).map(ContactFromJSON)),
    };
}

export function ContactsListToJSON(json: any): ContactsList {
    return ContactsListToJSONTyped(json, false);
}

export function ContactsListToJSONTyped(value?: ContactsList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'total': value['total'],
        'offset': value['offset'],
        'contacts': value['contacts'] == null ? undefined : ((value['contacts'] as Array<any>).map(ContactToJSON)),
    };
}

