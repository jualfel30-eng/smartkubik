/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MobileLoginMethod } from './MobileLoginMethod';
import {
    MobileLoginMethodFromJSON,
    MobileLoginMethodFromJSONTyped,
    MobileLoginMethodToJSON,
    MobileLoginMethodToJSONTyped,
} from './MobileLoginMethod';

/**
 * Request a login code to be sent to the user's phone number. The code is valid for 5 minutes.
 * @export
 * @interface RequestMobileLogin
 */
export interface RequestMobileLogin {
    /**
     * Contact ID
     * @type {string}
     * @memberof RequestMobileLogin
     */
    phoneNumber: string;
    /**
     * 
     * @type {MobileLoginMethod}
     * @memberof RequestMobileLogin
     */
    method?: MobileLoginMethod;
    /**
     * The captcha code
     * @type {string}
     * @memberof RequestMobileLogin
     */
    captchaCode?: string;
    /**
     * The auth code
     * @type {string}
     * @memberof RequestMobileLogin
     */
    code?: string;
}



/**
 * Check if a given object implements the RequestMobileLogin interface.
 */
export function instanceOfRequestMobileLogin(value: object): value is RequestMobileLogin {
    if (!('phoneNumber' in value) || value['phoneNumber'] === undefined) return false;
    return true;
}

export function RequestMobileLoginFromJSON(json: any): RequestMobileLogin {
    return RequestMobileLoginFromJSONTyped(json, false);
}

export function RequestMobileLoginFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestMobileLogin {
    if (json == null) {
        return json;
    }
    return {
        
        'phoneNumber': json['phone_number'],
        'method': json['method'] == null ? undefined : MobileLoginMethodFromJSON(json['method']),
        'captchaCode': json['captcha_code'] == null ? undefined : json['captcha_code'],
        'code': json['code'] == null ? undefined : json['code'],
    };
}

export function RequestMobileLoginToJSON(json: any): RequestMobileLogin {
    return RequestMobileLoginToJSONTyped(json, false);
}

export function RequestMobileLoginToJSONTyped(value?: RequestMobileLogin | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'phone_number': value['phoneNumber'],
        'method': MobileLoginMethodToJSON(value['method']),
        'captcha_code': value['captchaCode'],
        'code': value['code'],
    };
}

