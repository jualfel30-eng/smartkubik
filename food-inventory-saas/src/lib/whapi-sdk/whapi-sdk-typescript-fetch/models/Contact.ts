/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Contact
 */
export interface Contact {
    /**
     * WA ID
     * @type {string}
     * @memberof Contact
     */
    id: string;
    /**
     * Contact title from contact book
     * @type {string}
     * @memberof Contact
     */
    name: string;
    /**
     * Account name from WA or WA Business name
     * @type {string}
     * @memberof Contact
     */
    pushname?: string;
    /**
     * Is a business account
     * @type {boolean}
     * @memberof Contact
     */
    isBusiness?: boolean;
    /**
     * Profile picture URL
     * @type {string}
     * @memberof Contact
     */
    profilePic?: string;
    /**
     * Profile full picture URL
     * @type {string}
     * @memberof Contact
     */
    profilePicFull?: string;
    /**
     * Contact status
     * @type {string}
     * @memberof Contact
     */
    status?: string;
}

/**
 * Check if a given object implements the Contact interface.
 */
export function instanceOfContact(value: object): value is Contact {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function ContactFromJSON(json: any): Contact {
    return ContactFromJSONTyped(json, false);
}

export function ContactFromJSONTyped(json: any, ignoreDiscriminator: boolean): Contact {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'pushname': json['pushname'] == null ? undefined : json['pushname'],
        'isBusiness': json['is_business'] == null ? undefined : json['is_business'],
        'profilePic': json['profile_pic'] == null ? undefined : json['profile_pic'],
        'profilePicFull': json['profile_pic_full'] == null ? undefined : json['profile_pic_full'],
        'status': json['status'] == null ? undefined : json['status'],
    };
}

export function ContactToJSON(json: any): Contact {
    return ContactToJSONTyped(json, false);
}

export function ContactToJSONTyped(value?: Contact | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'pushname': value['pushname'],
        'is_business': value['isBusiness'],
        'profile_pic': value['profilePic'],
        'profile_pic_full': value['profilePicFull'],
        'status': value['status'],
    };
}

