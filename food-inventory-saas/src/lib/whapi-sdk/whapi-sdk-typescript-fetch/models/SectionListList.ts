/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SectionListListSectionsInner } from './SectionListListSectionsInner';
import {
    SectionListListSectionsInnerFromJSON,
    SectionListListSectionsInnerFromJSONTyped,
    SectionListListSectionsInnerToJSON,
    SectionListListSectionsInnerToJSONTyped,
} from './SectionListListSectionsInner';

/**
 * 
 * @export
 * @interface SectionListList
 */
export interface SectionListList {
    /**
     * Section of the message
     * @type {Array<SectionListListSectionsInner>}
     * @memberof SectionListList
     */
    sections: Array<SectionListListSectionsInner>;
    /**
     * Text for list of message
     * @type {string}
     * @memberof SectionListList
     */
    label?: string;
}

/**
 * Check if a given object implements the SectionListList interface.
 */
export function instanceOfSectionListList(value: object): value is SectionListList {
    if (!('sections' in value) || value['sections'] === undefined) return false;
    return true;
}

export function SectionListListFromJSON(json: any): SectionListList {
    return SectionListListFromJSONTyped(json, false);
}

export function SectionListListFromJSONTyped(json: any, ignoreDiscriminator: boolean): SectionListList {
    if (json == null) {
        return json;
    }
    return {
        
        'sections': ((json['sections'] as Array<any>).map(SectionListListSectionsInnerFromJSON)),
        'label': json['label'] == null ? undefined : json['label'],
    };
}

export function SectionListListToJSON(json: any): SectionListList {
    return SectionListListToJSONTyped(json, false);
}

export function SectionListListToJSONTyped(value?: SectionListList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'sections': ((value['sections'] as Array<any>).map(SectionListListSectionsInnerToJSON)),
        'label': value['label'],
    };
}

