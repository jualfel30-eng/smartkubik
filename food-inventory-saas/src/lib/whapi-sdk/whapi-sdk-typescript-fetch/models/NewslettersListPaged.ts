/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Newsletter } from './Newsletter';
import {
    NewsletterFromJSON,
    NewsletterFromJSONTyped,
    NewsletterToJSON,
    NewsletterToJSONTyped,
} from './Newsletter';
import type { Paging } from './Paging';
import {
    PagingFromJSON,
    PagingFromJSONTyped,
    PagingToJSON,
    PagingToJSONTyped,
} from './Paging';

/**
 * 
 * @export
 * @interface NewslettersListPaged
 */
export interface NewslettersListPaged {
    /**
     * 
     * @type {Array<Newsletter>}
     * @memberof NewslettersListPaged
     */
    newsletters?: Array<Newsletter>;
    /**
     * 
     * @type {Paging}
     * @memberof NewslettersListPaged
     */
    pageInfo?: Paging;
}

/**
 * Check if a given object implements the NewslettersListPaged interface.
 */
export function instanceOfNewslettersListPaged(value: object): value is NewslettersListPaged {
    return true;
}

export function NewslettersListPagedFromJSON(json: any): NewslettersListPaged {
    return NewslettersListPagedFromJSONTyped(json, false);
}

export function NewslettersListPagedFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewslettersListPaged {
    if (json == null) {
        return json;
    }
    return {
        
        'newsletters': json['newsletters'] == null ? undefined : ((json['newsletters'] as Array<any>).map(NewsletterFromJSON)),
        'pageInfo': json['page_info'] == null ? undefined : PagingFromJSON(json['page_info']),
    };
}

export function NewslettersListPagedToJSON(json: any): NewslettersListPaged {
    return NewslettersListPagedToJSONTyped(json, false);
}

export function NewslettersListPagedToJSONTyped(value?: NewslettersListPaged | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'newsletters': value['newsletters'] == null ? undefined : ((value['newsletters'] as Array<any>).map(NewsletterToJSON)),
        'page_info': PagingToJSON(value['pageInfo']),
    };
}

