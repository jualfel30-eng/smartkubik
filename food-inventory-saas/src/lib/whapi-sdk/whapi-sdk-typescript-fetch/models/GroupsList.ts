/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Group } from './Group';
import {
    GroupFromJSON,
    GroupFromJSONTyped,
    GroupToJSON,
    GroupToJSONTyped,
} from './Group';

/**
 * 
 * @export
 * @interface GroupsList
 */
export interface GroupsList {
    /**
     * Count of requested chats
     * @type {number}
     * @memberof GroupsList
     */
    count?: number;
    /**
     * Total number of returned chats
     * @type {number}
     * @memberof GroupsList
     */
    total?: number;
    /**
     * Offset of requested chats
     * @type {number}
     * @memberof GroupsList
     */
    offset?: number;
    /**
     * 
     * @type {Array<Group>}
     * @memberof GroupsList
     */
    groups?: Array<Group>;
}

/**
 * Check if a given object implements the GroupsList interface.
 */
export function instanceOfGroupsList(value: object): value is GroupsList {
    return true;
}

export function GroupsListFromJSON(json: any): GroupsList {
    return GroupsListFromJSONTyped(json, false);
}

export function GroupsListFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupsList {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'total': json['total'] == null ? undefined : json['total'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(GroupFromJSON)),
    };
}

export function GroupsListToJSON(json: any): GroupsList {
    return GroupsListToJSONTyped(json, false);
}

export function GroupsListToJSONTyped(value?: GroupsList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'total': value['total'],
        'offset': value['offset'],
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(GroupToJSON)),
    };
}

