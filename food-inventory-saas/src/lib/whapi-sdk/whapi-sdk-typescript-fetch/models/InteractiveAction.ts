/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Button } from './Button';
import {
    ButtonFromJSON,
    ButtonFromJSONTyped,
    ButtonToJSON,
    ButtonToJSONTyped,
} from './Button';
import type { SectionListList } from './SectionListList';
import {
    SectionListListFromJSON,
    SectionListListFromJSONTyped,
    SectionListListToJSON,
    SectionListListToJSONTyped,
} from './SectionListList';

/**
 * 
 * @export
 * @interface InteractiveAction
 */
export interface InteractiveAction {
    /**
     * 
     * @type {SectionListList}
     * @memberof InteractiveAction
     */
    list?: SectionListList;
    /**
     * Buttons
     * @type {Array<Button>}
     * @memberof InteractiveAction
     */
    buttons?: Array<Button>;
    /**
     * 
     * @type {object}
     * @memberof InteractiveAction
     */
    product?: object;
}

/**
 * Check if a given object implements the InteractiveAction interface.
 */
export function instanceOfInteractiveAction(value: object): value is InteractiveAction {
    return true;
}

export function InteractiveActionFromJSON(json: any): InteractiveAction {
    return InteractiveActionFromJSONTyped(json, false);
}

export function InteractiveActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): InteractiveAction {
    if (json == null) {
        return json;
    }
    return {
        
        'list': json['list'] == null ? undefined : SectionListListFromJSON(json['list']),
        'buttons': json['buttons'] == null ? undefined : ((json['buttons'] as Array<any>).map(ButtonFromJSON)),
        'product': json['product'] == null ? undefined : json['product'],
    };
}

export function InteractiveActionToJSON(json: any): InteractiveAction {
    return InteractiveActionToJSONTyped(json, false);
}

export function InteractiveActionToJSONTyped(value?: InteractiveAction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'list': SectionListListToJSON(value['list']),
        'buttons': value['buttons'] == null ? undefined : ((value['buttons'] as Array<any>).map(ButtonToJSON)),
        'product': value['product'],
    };
}

