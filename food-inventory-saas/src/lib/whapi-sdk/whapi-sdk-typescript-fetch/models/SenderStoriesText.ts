/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SenderStoriesText
 */
export interface SenderStoriesText {
    /**
     * List of contacts to send the story to
     * @type {Array<string>}
     * @memberof SenderStoriesText
     */
    contacts?: Array<string>;
    /**
     * List of contacts to exclude
     * @type {Array<string>}
     * @memberof SenderStoriesText
     */
    excludeContacts?: Array<string>;
    /**
     * Optional. Text caption under the media.
     * @type {string}
     * @memberof SenderStoriesText
     */
    caption: string;
    /**
     * Background color of the story (ARGB)
     * @type {string}
     * @memberof SenderStoriesText
     */
    backgroundColor?: string;
    /**
     * Caption color of the story (ARGB)
     * @type {string}
     * @memberof SenderStoriesText
     */
    captionColor?: string;
    /**
     * Font style of the story
     * @type {string}
     * @memberof SenderStoriesText
     */
    fontType?: SenderStoriesTextFontTypeEnum;
}


/**
 * @export
 */
export const SenderStoriesTextFontTypeEnum = {
    System: 'SYSTEM',
    SystemText: 'SYSTEM_TEXT',
    FbScript: 'FB_SCRIPT',
    SystemBold: 'SYSTEM_BOLD',
    MorningbreezeRegular: 'MORNINGBREEZE_REGULAR',
    CalistogaRegular: 'CALISTOGA_REGULAR',
    Exo2Extrabold: 'EXO2_EXTRABOLD',
    CourierprimeBold: 'COURIERPRIME_BOLD'
} as const;
export type SenderStoriesTextFontTypeEnum = typeof SenderStoriesTextFontTypeEnum[keyof typeof SenderStoriesTextFontTypeEnum];


/**
 * Check if a given object implements the SenderStoriesText interface.
 */
export function instanceOfSenderStoriesText(value: object): value is SenderStoriesText {
    if (!('caption' in value) || value['caption'] === undefined) return false;
    return true;
}

export function SenderStoriesTextFromJSON(json: any): SenderStoriesText {
    return SenderStoriesTextFromJSONTyped(json, false);
}

export function SenderStoriesTextFromJSONTyped(json: any, ignoreDiscriminator: boolean): SenderStoriesText {
    if (json == null) {
        return json;
    }
    return {
        
        'contacts': json['contacts'] == null ? undefined : json['contacts'],
        'excludeContacts': json['exclude_contacts'] == null ? undefined : json['exclude_contacts'],
        'caption': json['caption'],
        'backgroundColor': json['background_color'] == null ? undefined : json['background_color'],
        'captionColor': json['caption_color'] == null ? undefined : json['caption_color'],
        'fontType': json['font_type'] == null ? undefined : json['font_type'],
    };
}

export function SenderStoriesTextToJSON(json: any): SenderStoriesText {
    return SenderStoriesTextToJSONTyped(json, false);
}

export function SenderStoriesTextToJSONTyped(value?: SenderStoriesText | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'contacts': value['contacts'],
        'exclude_contacts': value['excludeContacts'],
        'caption': value['caption'],
        'background_color': value['backgroundColor'],
        'caption_color': value['captionColor'],
        'font_type': value['fontType'],
    };
}

