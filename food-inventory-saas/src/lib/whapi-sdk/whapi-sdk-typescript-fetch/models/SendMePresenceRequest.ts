/* tslint:disable */
/* eslint-disable */
/**
 * Whapi API
 * Sending and receiving messages using HTTP requests. Fixed price with no hidden fees, without limits and restrictions. You will be able to send and receive text/media/files/locations/goods/orders/polls messages via WhatsApp in private or group chats. Guides and SDK can be found on our website.
 *
 * The version of the OpenAPI document: 1.8.7
 * Contact: care@whapi.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SendMePresenceRequest
 */
export interface SendMePresenceRequest {
    /**
     * 
     * @type {string}
     * @memberof SendMePresenceRequest
     */
    presence: SendMePresenceRequestPresenceEnum;
}


/**
 * @export
 */
export const SendMePresenceRequestPresenceEnum = {
    Online: 'online',
    Offline: 'offline'
} as const;
export type SendMePresenceRequestPresenceEnum = typeof SendMePresenceRequestPresenceEnum[keyof typeof SendMePresenceRequestPresenceEnum];


/**
 * Check if a given object implements the SendMePresenceRequest interface.
 */
export function instanceOfSendMePresenceRequest(value: object): value is SendMePresenceRequest {
    if (!('presence' in value) || value['presence'] === undefined) return false;
    return true;
}

export function SendMePresenceRequestFromJSON(json: any): SendMePresenceRequest {
    return SendMePresenceRequestFromJSONTyped(json, false);
}

export function SendMePresenceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SendMePresenceRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'presence': json['presence'],
    };
}

export function SendMePresenceRequestToJSON(json: any): SendMePresenceRequest {
    return SendMePresenceRequestToJSONTyped(json, false);
}

export function SendMePresenceRequestToJSONTyped(value?: SendMePresenceRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'presence': value['presence'],
    };
}

